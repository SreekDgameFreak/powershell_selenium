# -- launcher

rem 
path=%path%;c:\Windows\Microsoft.NET\Framework\v4.0.30319
path=%path%;D:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE

msbuild.exe Sample.sln /t:clean /t:build


del /q %CD%\results.trx
REM nunit-console.exe Sample\bin\Debug\Sample.dll
REM http://msdn.microsoft.com/en-us/library/ms182489.aspx
REM goto :EOF
MSTEST.EXE /testcontainer:Sample\bin\Debug\Sample.dll /resultsfile:%CD%\results.trx
REM http://blogs.msdn.com/b/vstsqualitytools/archive/2009/12/22/running-tests-in-mstest-without-installing-the-vs-ide.aspx
REM (iso)

copy /y %CD%\results.trx C:\MSTEST_LOGS


# -- step 1

write-output ('Starting.. at {0}' -f  (Date) )
start-Process -FilePath 'C:\Windows\System32\cmd.exe' -ArgumentList 'start cmd /c setup.cmd'
# invoke-expression -command 'cmd start cmd /c setup.cmd'
# teamcity seems to capture a new process STDOUT but never 
# the following line 
write-output ('Launched at {0}' -f  (Date) )

# -- step 2
write-output 'Inspecting  processes running on the machine'
write-output 'mstest ?'

get-process | ? { $_.ProcessName           -match 'MSTest' }
write-output 'java ?'
get-process | ? { $_.ProcessName           -match 'java'  }
write-output 'firefox ?'
get-process | ? { $_.ProcessName          -match 'firefox' }
<# 
write-output 'all processes ?'
get-process
#>
